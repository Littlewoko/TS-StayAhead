1. Javascript will not enforce typing on functions or variables. That means that if you want to prevent certain types/ enforce behaviour, then more code/ checks/ testing is necessary.
2. So that sites do not freeze/ break during runtime.
3. TypeScript is not a programming language, it is a layer on top of js to introduce static typing. The TS is compiled into js at compile time.
4. TypeScript works by doing compile time checks on typing, emitting or throwing errors when types have not been abided by.
5. Downleveling is how typescript transpires into older versions of js (using traditional for loop rather than for each for example)
6. No, typescript does not have a role at runtime. However, the compile process could allow for the creation of more efficient/ better practice js at compile time.
7. In function parameters or when a variable is not initialised.
8. Any allows any type to be passed in. This is for temporary use in migration a js codebase to ts.
9. No. Undefined is not of type string, so there would be a type error at compile time